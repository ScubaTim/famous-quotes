{"version":3,"sources":["actions/hookActions.js","App.js","index.js"],"names":["getRandomQuotes","setRandomQuotes","a","axios","get","response","data","App","useState","randomQuotes","text","author","quote","setQuote","useEffect","className","style","height","Card","color","minWidth","width","CardBody","CardTitle","tag","CardSubtitle","CardText","Button","block","onClick","rand","Math","floor","random","length","randomQuote","getRandomQuote","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAOeA,EALM,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACGC,IAAMC,IAAI,+BADb,OACdC,EADc,OAEpBJ,EAAgBI,EAASC,MAFL,2CAAH,sDCqDNC,MA/Cf,WAAgB,IAAD,EAC2BC,mBAAS,IADpC,mBACNC,EADM,KACQR,EADR,OAEaO,mBAAS,CACjCE,KAAM,kFACNC,OAAQ,KAJG,mBAENC,EAFM,KAECC,EAFD,KAiBb,OAVAC,qBAAU,WACRd,EAAgBC,KAChB,IASA,yBAA+Bc,UAAU,8DAA8DC,MAAO,CAACC,OAAQ,UACrH,yBAAKF,UAAU,UACf,kBAACG,EAAA,EAAD,CAAiCC,MAAM,QAAQH,MAAO,CAACI,SAAS,QAASC,MAAM,SAC7E,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,IAAI,KAAKT,UAAU,mCAA9B,kBACA,kBAACU,EAAA,EAAD,CAAcV,UAAU,8DAAxB,qBACA,wBAAIA,UAAU,SACd,yBAAKA,UAAU,kBACb,kBAACW,EAAA,EAAD,KACGd,EAAMF,MAET,uBAAGK,UAAU,mBAAmBH,EAAMD,OAAN,YAAoBC,EAAMD,QAAW,KAEvE,yBAAKI,UAAU,oBACf,kBAACY,EAAA,EAAD,CAAQR,MAAM,UAAUS,OAAK,EAA8BC,QAAS,kBArBrD,WACrB,IAAMC,EAAOC,KAAKC,MAAMD,KAAKE,SAAWxB,EAAayB,QAC/CC,EAAc1B,EAAaqB,GACjCjB,EAASsB,GAkBuEC,KAA1E,iBAEA,6BACE,6BACA,wBAAIrB,UAAU,uBACZ,0DAA+B,uBAAGsB,KAAK,qBAAR,oBCtC7CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.50a79f6b.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst getRandomQuotes = async (setRandomQuotes) => {\n    const response = await axios.get('https://type.fit/api/quotes')\n    setRandomQuotes(response.data)\n}\n\nexport default getRandomQuotes;\n\n\n","import React, { useState, useEffect } from 'react';\nimport {\n  Card, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\n\nimport getRandomQuotes from './actions/hookActions';\n\nfunction App() {\n  const [randomQuotes, setRandomQuotes] = useState([])\n  const [quote, setQuote] = useState({\n    text: \"Quotations from famously known people, presented at random from a curated list.\",\n    author: \"\"\n  });\n\n  useEffect(() => {\n    getRandomQuotes(setRandomQuotes)\n  },[])\n\n  const getRandomQuote = () => {\n    const rand = Math.floor(Math.random() * randomQuotes.length)\n    const randomQuote = randomQuotes[rand]\n    setQuote(randomQuote)\n  }\n\n  return (\n    <div data-test=\"component-app\" className=\"bg-primary d-flex justify-content-center align-items-center\" style={{height: \"100vh\"}}>\n      <div className=\"shadow\">\n      <Card data-test=\"component-card\" color=\"light\" style={{minWidth:\"320px\", width:\"28vw\"}}>\n        <CardBody>\n          <CardTitle tag=\"h1\" className=\"text-center text-uppercase my-2\">A Famous Quote</CardTitle>\n          <CardSubtitle className=\"text-center text-uppercase font-weight-bold text-secondary\">Randomly Selected</CardSubtitle>\n          <hr className=\"mt-3\" />\n          <div className=\"mx-4 pt-4 pb-5\">\n            <CardText data-test=\"component-quote\">\n              {quote.text}\n            </CardText>\n            <p className=\"text-right pr-2\">{quote.author ? `~ ${quote.author}` : ''}</p>\n          </div>\n          <div className=\"d-flex mx-4 mb-4\">\n          <Button color=\"success\" block data-test=\"component-button\" onClick={() => getRandomQuote()}>Random Quote</Button>\n          </div>\n          <div>\n            <hr />\n            <h6 className=\"text-secondary px-4\">\n              <em>Quotations api provided by <a href=\"https://type.fit/\">type.fit</a></em>\n            </h6>\n          </div>\n        </CardBody>\n      </Card>\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}